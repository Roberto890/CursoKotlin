<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent">
    <!-- Chain style tem tanto horizontal quando vertical
    Ele como o nome diz faz um corrente e é colocada na
    cabeça da corrente no caso a corrente feita foi entre
    Button A, Button B.
    CHAIN - PACKED: Ficam juntos e ocupam somente o espaço q prescisa
    Se os dois tiverem 0dp pega toda tela eles se dividem
    e da pra usar o horizontal weight para deixar um maior q o outro
    app:layout_constraintHorizontal_chainStyle="packed"
        app:layout_constraintHorizontal_weight="2"

    CHAIN - SPREAD: Espalham mas os espaços entre os elementos
    e as laterais da tela ficam divididos igualmente

    CHAIN - SPREAD_INSIDE: Espalham mas os espaços entre os
    elementos ficam divididos igualmente porém entre as laterais da
    tela não-->
    <Button
        android:id="@+id/buttonA"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="16dp"
        android:layout_marginTop="16dp"
        android:text="Button A"
        app:layout_constraintHorizontal_chainStyle="spread"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toLeftOf="@id/buttonB"
        app:layout_constraintTop_toTopOf="parent" />

    <Button
        android:id="@+id/buttonB"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="16dp"
        android:layout_marginEnd="16dp"
        android:text="Button B"
        app:layout_constraintLeft_toRightOf="@id/buttonA"
        app:layout_constraintRight_toRightOf="parent"
        app:layout_constraintTop_toTopOf="@id/buttonA" />

    <Button
        android:id="@+id/buttonC"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginStart="16dp"
        android:layout_marginEnd="16dp"
        android:text="Button C"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toRightOf="parent"
        app:layout_constraintTop_toBottomOf="@id/buttonA" />

    <!-- bias ele muda a força que puxa os elementos
     tem vertical e horizontal o meio é 0.5
     se aumenta vai pra frente ou pra baixo
     e se diminuir vai pra esquerda ou pra cima-->
    <Button
        android:id="@+id/buttonD"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="16dp"
        android:layout_marginEnd="16dp"
        android:text="Button D"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintHorizontal_bias="0.7"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toRightOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.7" />


    <!-- usando circle, circleAngle e CircleRadius
    Consigo colocar o botão em por ex: igual o q ta
    escrito esta em um angulo de 220 garus do botao D-->
    <Button
        android:id="@+id/buttonE"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="16dp"
        android:layout_marginTop="16dp"
        android:layout_marginEnd="16dp"
        android:text="Button E"
        app:layout_constraintCircle="@id/buttonD"
        app:layout_constraintCircleAngle="220"
        app:layout_constraintCircleRadius="100dp"
        app:layout_constraintLeft_toLeftOf="@id/buttonD"
        app:layout_constraintTop_toTopOf="@id/buttonD" />

</androidx.constraintlayout.widget.ConstraintLayout>